using BFF.API.Controllers;
using Ingestion.Dominio.Saga;

namespace BFF.API.Services;

/// <summary>
/// Service interface for handling image processing requests
/// </summary>
public interface IImagenService
{
    /// <summary>
    /// Initiates image processing and returns a correlation ID for tracking
    /// </summary>
    /// <param name="imagenId">The ID of the image to process</param>
    /// <param name="descripcion">Optional description</param>
    /// <returns>The correlation ID for tracking the request</returns>
    Task<Guid> IniciarProcesamientoAsync(SolicitudProcesamientoRequest imagen, string descripcion = null);
    
    /// <summary>
    /// Gets the status of an image processing request by correlation ID
    /// </summary>
    /// <param name="correlationId">The correlation ID to look up</param>
    /// <returns>The correlation info or null if not found</returns>
    Task<CorrelationInfo> ObtenerEstadoProcesamientoAsync(Guid correlationId);
    
    /// <summary>
    /// Handles the saga initiated event from the Ingestion service
    /// </summary>
    /// <param name="correlationId">The correlation ID from the original request</param>
    /// <param name="sagaId">The saga ID generated by the Ingestion service</param>
    /// <param name="imagenId">The image ID being processed</param>
    /// <returns>Task representing the asynchronous operation</returns>
    Task HandleSagaIniciadaAsync(Guid correlationId, Guid sagaId, Guid imagenId);

    Task<ImagenIngestionSagaState> ObtenerEstadoSagaAsync(Guid sagaId);
}
