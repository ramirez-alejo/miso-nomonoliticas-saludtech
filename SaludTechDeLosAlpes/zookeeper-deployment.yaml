apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose.yml
    kompose.version: 1.35.0 (9532ceef3)
  labels:
    io.kompose.service: zookeeper
  name: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: zookeeper
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose.yml
        kompose.version: 1.35.0 (9532ceef3)
      labels:
        io.kompose.service: zookeeper
    spec:
      securityContext:
        fsGroup: 0
        runAsUser: 0
      initContainers:
        - name: init-permissions
          image: busybox
          command: ["sh", "-c", "mkdir -p /pulsar/data/zookeeper && chmod -R 777 /pulsar/data/zookeeper"]
          volumeMounts:
            - mountPath: /pulsar/data/zookeeper
              name: zookeeper-data
      containers:
        - args:
            - bash
            - -c
            - "bin/apply-config-from-env.py conf/zookeeper.conf && \n       bin/generate-zookeeper-config.sh conf/zookeeper.conf && \n       exec bin/pulsar zookeeper"
          env:
            - name: PULSAR_MEM
              value: -Xms256m -Xmx256m -XX:MaxDirectMemorySize=256m
            - name: metadataStoreUrl
              value: zk:zookeeper:2181
          image: apachepulsar/pulsar:latest
          livenessProbe:
            exec:
              command:
                - bin/pulsar-zookeeper-ruok.sh
            failureThreshold: 30
            periodSeconds: 10
            timeoutSeconds: 5
          name: zookeeper
          ports:
            - containerPort: 2181
              protocol: TCP
            - containerPort: 2888
              protocol: TCP
            - containerPort: 3888
              protocol: TCP
          volumeMounts:
            - mountPath: /pulsar/data/zookeeper
              name: zookeeper-data
      restartPolicy: Always
      volumes:
        - name: zookeeper-data
          persistentVolumeClaim:
            claimName: zookeeper-data
