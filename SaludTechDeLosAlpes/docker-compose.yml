version: '3'
networks:
  pulsar:
    driver: bridge
services:
  # Databases
  modalidad-db:
    image: postgres:latest
    container_name: modalidad-db
    environment:
      - POSTGRES_DB=SaludTechModalidadDb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5433:5432"
    networks:
      - pulsar
    volumes:
      - ./data/modalidad-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  demografia-db:
    image: postgres:latest
    container_name: demografia-db
    environment:
      - POSTGRES_DB=SaludTechDemografiaDb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5434:5432"
    networks:
      - pulsar
    volumes:
      - ./data/demografia-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  ingestion-db:
    image: postgres:latest
    container_name: ingestion-db
    environment:
      - POSTGRES_DB=SaludTechIngestionDb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5435:5432"
    networks:
      - pulsar
    volumes:
      - ./data/ingestion-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - pulsar
    volumes:
      - ./data/redis:/data

  # Services
  bff_web:
    build:
      context: .
      dockerfile: bff/Dockerfile
    container_name: bff_web
    depends_on:
      broker:
          condition: service_started
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - MessageBroker__Host=broker
      - MessageBroker__Port=6650
    networks:
      - pulsar
    ports:
      - "8003:8003"

  modalidad-service:
    build:
      context: .
      dockerfile: Distribucion/Consulta.Aplicacion.Modalidad/Dockerfile
    container_name: modalidad-service
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=modalidad-db;Database=SaludTechModalidadDb;Username=postgres;Password=postgres
      - MessageBroker__Host=broker
      - MessageBroker__Port=6650
    depends_on:
      modalidad-db:
        condition: service_healthy
      broker:
        condition: service_started
    networks:
      - pulsar
    ports:
      - "5002:80"
    restart: on-failure

  demografia-service:
    build:
      context: .
      dockerfile: Distribucion/Consulta.Aplicacion.Demografia/Dockerfile
    container_name: demografia-service
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=demografia-db;Database=SaludTechDemografiaDb;Username=postgres;Password=postgres
      - MessageBroker__Host=broker
      - MessageBroker__Port=6650
    depends_on:
      demografia-db:
        condition: service_healthy
      broker:
        condition: service_started
    networks:
      - pulsar
    ports:
      - "5001:80"
    restart: on-failure

  consulta-service:
    build:
      context: .
      dockerfile: Distribucion/Consulta.Aplicacion/Dockerfile
    container_name: consulta-service
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - MessageBroker__Host=broker
      - MessageBroker__Port=6650
      - ServiciosFiltro__Demografia=http://demografia-service/api/demografia/buscar
      - ServiciosFiltro__Modalidad=http://modalidad-service/api/modalidad/buscar
      - DataWarehouse__Host=http://ingestion-service/api/imagenes/ids
      - Redis__ConnectionString=redis:6379
    depends_on:
      broker:
        condition: service_started
      demografia-service:
        condition: service_started
      modalidad-service:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - pulsar
    ports:
      - "5000:80"
    restart: on-failure

  ingestion-service:
    build:
      context: .
      dockerfile: Ingestion/Ingestion.Aplicacion/Dockerfile
    container_name: ingestion-service
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=ingestion-db;Database=SaludTechIngestionDb;Username=postgres;Password=postgres
      - MessageBroker__Host=broker
      - MessageBroker__Port=6650
      - Redis__ConnectionString=redis:6379
    depends_on:
      ingestion-db:
        condition: service_healthy
      broker:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - pulsar
    ports:
      - "5003:80"
    restart: on-failure

  anonimizacion-db:
    image: postgres:latest
    container_name: anonimizacion-db
    environment:
      - POSTGRES_DB=SaludTechAnonimizacionDb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5436:5432"
    networks:
      - pulsar
    volumes:
      - ./data/anonimizacion-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  anonimizacion-service:
    build:
      context: .
      dockerfile: Ingestion/Ingestion.Aplicacion.Anonimizacion/Dockerfile
    container_name: anonimizacion-service
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=anonimizacion-db;Database=SaludTechAnonimizacionDb;Username=postgres;Password=postgres
      - MessageBroker__Host=broker
      - MessageBroker__Port=6650
    depends_on:
      anonimizacion-db:
        condition: service_healthy
      broker:
        condition: service_started
    networks:
      - pulsar
    ports:
      - "5004:80"
    restart: on-failure

  metadata-db:
    image: postgres:latest
    container_name: metadata-db
    environment:
      - POSTGRES_DB=SaludTechMetadataDb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5437:5432"
    networks:
      - pulsar
    volumes:
      - ./data/metadata-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  metadata-service:
    build:
      context: .
      dockerfile: Ingestion/Ingestion.Aplicacion.Metadata/Dockerfile
    container_name: metadata-service
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=metadata-db;Database=SaludTechMetadataDb;Username=postgres;Password=postgres
      - MessageBroker__Host=broker
      - MessageBroker__Port=6650
    depends_on:
      metadata-db:
        condition: service_healthy
      broker:
        condition: service_started
    networks:
      - pulsar
    ports:
      - "5005:80"
    restart: on-failure

  # Start zookeeper
  zookeeper:
    image: apachepulsar/pulsar:latest
    container_name: zookeeper
    restart: on-failure
    networks:
      - pulsar
    volumes:
      - ./data/zookeeper:/pulsar/data/zookeeper
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
      - PULSAR_MEM=-Xms256m -Xmx256m -XX:MaxDirectMemorySize=256m
    command: >
      bash -c "bin/apply-config-from-env.py conf/zookeeper.conf && \
             bin/generate-zookeeper-config.sh conf/zookeeper.conf && \
             exec bin/pulsar zookeeper"
    healthcheck:
      test: ["CMD", "bin/pulsar-zookeeper-ruok.sh"]
      interval: 10s
      timeout: 5s
      retries: 30

  # Init cluster metadata
  pulsar-init:
    container_name: pulsar-init
    hostname: pulsar-init
    image: apachepulsar/pulsar:latest
    networks:
      - pulsar
    command: >
      bash -c "bin/pulsar initialize-cluster-metadata \
      --cluster cluster-a \
      --zookeeper zookeeper:2181 \
      --configuration-store zookeeper:2181 \
      --web-service-url http://broker:8080 \
      --broker-service-url pulsar://broker:6650"
    depends_on:
      zookeeper:
        condition: service_healthy

  # Start bookie
  bookie:
    image: apachepulsar/pulsar:latest
    container_name: bookie
    restart: on-failure
    networks:
      - pulsar
    environment:
      - clusterName=cluster-a
      - zkServers=zookeeper:2181
      - metadataServiceUri=metadata-store:zk:zookeeper:2181
      - advertisedAddress=bookie
      - BOOKIE_MEM=-Xms512m -Xmx512m -XX:MaxDirectMemorySize=256m
    depends_on:
      zookeeper:
        condition: service_healthy
      pulsar-init:
        condition: service_completed_successfully
    volumes:
      - ./data/bookkeeper:/pulsar/data/bookkeeper
    command: bash -c "bin/apply-config-from-env.py conf/bookkeeper.conf && exec bin/pulsar bookie"

  # Start broker
  broker:
    image: apachepulsar/pulsar:latest
    container_name: broker
    hostname: broker
    restart: on-failure
    networks:
      - pulsar
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
      - zookeeperServers=zookeeper:2181
      - clusterName=cluster-a
      - managedLedgerDefaultEnsembleSize=1
      - managedLedgerDefaultWriteQuorum=1
      - managedLedgerDefaultAckQuorum=1
      - advertisedAddress=broker
      - advertisedListeners=internal:pulsar://broker:6650
      - PULSAR_MEM=-Xms512m -Xmx512m -XX:MaxDirectMemorySize=256m
    depends_on:
      zookeeper:
        condition: service_healthy
      bookie:
        condition: service_started
    ports:
      - "6650:6650"
      - "8080:8080"
    command: bash -c "bin/apply-config-from-env.py conf/broker.conf && exec bin/pulsar broker"
